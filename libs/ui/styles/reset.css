*,
::before,
::after {
  box-sizing: border-box;
}

:where(:not(dialog)) {
  margin: 0;
}

:where(:not(fieldset, progress, meter)) {
  border-width: 0;
  border-style: solid;
  background-origin: border-box;
  background-repeat: no-repeat;
}

:where(html) {
  block-size: 100%;
  font-family: var(--font-sans);
  line-height: var(--font-lineheight-3);
  -webkit-text-size-adjust: none; /* https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/ */

  @media (--motionOK) {
    scroll-behavior: smooth;
  }
}

@media (--motionOK) {
  :where(:focus-visible) {
    transition: outline-offset 145ms var(--ease-2);
  }
  :where(:not(:active):focus-visible) {
    transition-duration: 0.25s;
  }
}

:where(:not(:active):focus-visible) {
  outline-offset: 5px;
}

:where(body) {
  min-block-size: 100%;
}

:where(h1, h2, h3, h4, h5, h6) {
  line-height: var(--font-lineheight-1);
  font-weight: var(--font-weight-9);
  text-wrap: balance;
}

:where(h1) {
  font-size: var(--font-size-6);
}

:where(h2) {
  font-size: var(--font-size-5);
}

:where(h3) {
  font-size: var(--font-size-4);
}
:where(h4) {
  font-size: var(--font-size-3);
}
:where(h5) {
  font-size: var(--font-size-2);
}

:where(p, ul, ol, dl, h6) {
  font-size: var(--font-size-1);
}

:where(a, u, ins, abbr) {
  text-underline-offset: 1px;

  @supports (-moz-appearance: none) {
    text-underline-offset: 2px;
  }
}

:where(
    a[href],
    area,
    button,
    input:not(
        [type='text'],
        [type='email'],
        [type='number'],
        [type='password'],
        [type=''],
        [type='tel'],
        [type='url']
      ),
    label[for],
    select,
    summary,
    [tabindex]:not([tabindex*='-'])
  ) {
  cursor: pointer;
}

:where(
    a[href],
    area,
    button,
    input,
    label[for],
    select,
    summary,
    textarea,
    [tabindex]:not([tabindex*='-'])
  ) {
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

:where(a) {
  &:where(:not(:hover)) {
    text-decoration: inherit;
  }
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, svg, video) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(input, button, textarea, select),
:where(input[type='file'])::-webkit-file-uploaui-button {
  font: inherit;
  font-size: inherit;
  color: inherit;
  letter-spacing: inherit;
}

::placeholder {
  color: var(--gray-7);
  opacity: 0.75;
}

:where(input:not([type='range']), textarea) {
  padding-inline: var(--size-2);
  padding-block: var(--size-1);
}

:where(select) {
  padding-inline: var(--size-relative-4) 0;
  padding-block: 0.75ch;
}

:where(textarea, select, input:not([type='button'], [type='submit'], [type='reset'])) {
  background-color: var(--surface-2);
  border-radius: var(--radius-2);
}

:where(textarea) {
  resize: block;
}

:where(input[type='checkbox'], input[type='radio']) {
  block-size: var(--size-3);
  inline-size: var(--size-3);
}

:where(svg:not([width])) {
  inline-size: var(--size-10);
}

:where(code, kbd, samp, pre) {
  font-family: var(--font-mono);
}
:where(:not(pre) > code, kbd) {
  white-space: nowrap;
}

:where(pre) {
  white-space: pre;
  min-inline-size: 0;
  max-inline-size: max-content;
  writing-mode: lr;
  direction: ltr;
}

:where(:not(pre) > code) {
  padding: var(--size-1) var(--size-2);
  background: var(--surface-2);
  border-radius: var(--radius-2);
  writing-mode: lr;
}

:where(kbd, var) {
  padding: var(--size-1) var(--size-2);
  border-width: var(--border-size-1);
  border-color: var(--surface-4);
  border-radius: var(--radius-2);
}

:where(mark) {
  border-radius: var(--radius-2);
  padding-inline: var(--size-1);
}

:where(ol, ul) {
  padding-inline-start: var(--size-8);
}
:where(li) {
  padding-inline-start: var(--size-2);
}
:where(li, dd, figcaption) {
  max-inline-size: var(--size-content-2);
}
:where(p) {
  max-inline-size: var(--size-content-3);
  text-wrap: pretty;
}
:where(dt, summary) {
  font-weight: var(--font-weight-7);
}

:where(dt:not(:first-of-type)) {
  margin-block-start: var(--size-5);
}

:where(small) {
  font-size: max(0.5em, var(--font-size-0));
  max-inline-size: var(--size-content-1);
}

:where(hr) {
  margin-block: var(--size-fluid-5);
  height: var(--border-size-2);
  background-color: var(--surface-3);
}

:where(figure) {
  display: grid;
  gap: var(--size-2);
  place-items: center;

  & > :where(figcaption) {
    font-size: var(--font-size-1);
    text-wrap: balance;
  }
}

:where(:focus-visible) {
  outline-width: 2px;
}

ul {
  list-style: none;
  padding: 0;
  font-size: inherit;
}

ul > li {
  padding: 0;
  max-inline-size: 100%;
}

p {
  max-inline-size: 100%;
}

:is(a[href], a[href]:hover, a[href]:visited) {
  color: inherit;
  text-decoration: none;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-text-fill-color: var(--text-1);
  -webkit-box-shadow: 0 0 0px 1000px var(--surface-1) inset;
}

svg *:focus {
  outline: none;
}

fieldset {
  padding: 0;
  border: none;
  border-radius: 0;
}

:is(h1, h2, h3, h4, h5, h6) {
  font-weight: var(--font-weight-7);
  max-inline-size: 100%;
}

body {
  background: var(--surface-2);
  color: var(--text-1);
  overscroll-behavior-y: contain;
}

:is(button, a):focus-visible {
  outline: var(--primary) solid 3px;
  transition: outline-offset 145ms var(--ease-2);
}

:where(button) {
  cursor: pointer;
  background-color: transparent;
  border: none;
}

:where(:not(:active):focus-visible) {
  outline-offset: var(--outline-offset);
}

@media (--mouse) {
  a:hover {
    text-decoration: underline;
  }
}

html.dark {
  color-scheme: dark;
}
